#include<iostream>
using namespace std;

//筛法产生素数表 MAXN为最大范围 
#include <cmath>
#define MAXN  4000000
#define pMaxCount 300000
int  pCount; //MAXN=4000000以内的素数个数,大概28万多个
bool prime_hash[MAXN+1];
int  plist[pMaxCount]; //素数表,从小标0开始存 

inline void init_prime()
{
    int i, j, idx, max = (int)sqrt(MAXN*1.0);
    //prime_hash[i] = true,(i>=2)表示i为素数
    memset(prime_hash,true,sizeof(prime_hash));
    for(i = 2 ; i <= max; ++i) {
        if(prime_hash[i])
            for(j = i*i; j <= MAXN; j += i)
                prime_hash[j] = false;
    }
    //将素有素数保存在plist中
    for(idx = 0, i = 2; i <= MAXN; ++i)  
        if(prime_hash[i] == true) {plist[idx] = i;++idx;}
    pCount = idx;  // cout<<pCount<<endl;//可以输出范围内素数个数
}


int main() 
{ 
    init_prime();
	
    //*****

    return 0;    
}
