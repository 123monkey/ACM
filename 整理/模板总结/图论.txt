//图的邻结表
struct Node
{
       int v,w;
       Node *next;
}g[M],e[2*N];
int cnt,st[N],top,v[N],d[M];
void addedge(int u,int v,int w)
{
     Node *p=&e[cnt++];
     p->v=v;
     p->w=w;
     p->next=g[u].next;
     g[u].next=p;
}
void insert(int u,int v,int w)
{
     addedge(u,v,w);
     addedge(v,u,w);
}
//数组模拟图的邻接表 (无指针操作，效率高)
int fir[N],to[M],next[M],len[M],cnt;
//insert(u,v,w);
len[cnt]=w,to[cnt]=v,next[cnt]=fir[u],fir[u]=cnt++;
//欧拉回路dfs
void eular(int x)
{
     for(Node *p=g[x].next;p;p=p->next)
     {
           if(v[p->w]) continue;
           st[top++]=p->w;
           v[p->w]=1;
           eular(p->v);
     }
}
//欧拉回路的输出
while(top) {top--;printf("%d%c",st[top],top?' ':'\n');}