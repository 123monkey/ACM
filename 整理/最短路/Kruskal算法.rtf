{\rtf1\ansi\ansicpg936\uc2\deff0\stshfdbch13\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe2052{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}\'cb\'ce\'cc\'e5{\*\falt SimSun};}{\f37\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@\'cb\'ce\'cc\'e5;}{\f38\froman\fcharset238\fprq2 Times New Roman CE;}
{\f39\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f41\froman\fcharset161\fprq2 Times New Roman Greek;}{\f42\froman\fcharset162\fprq2 Times New Roman Tur;}{\f43\froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f44\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f45\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f46\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f170\fnil\fcharset0\fprq2 SimSun Western{\*\falt SimSun};}
{\f410\fnil\fcharset0\fprq2 @\'cb\'ce\'cc\'e5 Western;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\qj \li0\ri0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs21\lang1033\langfe2052\kerning2\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid3489225}{\*\generator Micro
soft Word 11.0.6568;}{\info{\author X}{\operator X}{\creatim\yr2009\mo4\dy15\hr11\min7}{\revtim\yr2009\mo4\dy15\hr11\min9}{\version2}{\edmins2}{\nofpages3}{\nofwords214}{\nofchars1225}{\nofcharsws1437}{\vern24579}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 \ftnbj\aenddoc\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\rsidroot3489225 \fet0\sectd 
\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta \dbch )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl7
\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}\pard\plain 
\qj \li0\ri0\nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3489225 \fs21\lang1033\langfe2052\kerning2\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\insrsid3489225 \loch\af0\hich\af0\dbch\f13 \'c8\'e7\'b9\'fb\'ca\'c7
\'d7\'ee\'d0\'a1\'c9\'fa\'b3\'c9\'ca\'f7\'bd\'e2\'cc\'e2\'b5\'c4\'bb\'b0\'a3\'ac\'ce\'d2\'be\'cd\'d3\'c3}{\insrsid3489225 \hich\af0\dbch\af13\loch\f0 Prime}{\insrsid3489225 \loch\af0\hich\af0\dbch\f13 \'cb\'e3\'b7\'a8\'ba\'cd}{\insrsid3489225 
\hich\af0\dbch\af13\loch\f0 Kruskal}{\insrsid3489225 \loch\af0\hich\af0\dbch\f13 \'cb\'e3\'b7\'a8\'bd\'e2\'d6\'ae\'a3\'ac\'bf\'b4\'bf\'b4\'ca\'b1\'bc\'e4\'d6\'ae\'bc\'e4\'b5\'c4\'b2\'ee\'b1\'f0\'a1\'a3}{\insrsid3489225 
\par }{\insrsid3489225 
\par 
\par \hich\af0\dbch\af13\loch\f0 #include <iostream>
\par \hich\af0\dbch\af13\loch\f0 using namespace std;
\par \hich\af0\dbch\af13\loch\f0 const int d = 10001;
\par 
\par \hich\af0\dbch\af13\loch\f0 struct list\{
\par \tab 
\par \tab \hich\af0\dbch\af13\loch\f0 int v1,v2,w;\tab 
\par \}\hich\af0\dbch\af13\loch\f0 ;
\par \hich\af0\dbch\af13\loch\f0 list v[5 * d];
\par \hich\af0\dbch\af13\loch\f0 int vis[2 * d];
\par \hich\af0\dbch\af13\loch\f0 int rank[2 * d];
\par 
\par \hich\af0\dbch\af13\loch\f0 int comp(const void *e1,const void *e2)\{
\par \tab 
\par \tab \hich\af0\dbch\af13\loch\f0 return ((list *)e2) -> w - ((list *)e1) -> w;\tab 
\par \}
\par 
\par \hich\af0\dbch\af13\loch\f0 void Init_set(void)\{
\par \tab 
\par \tab \hich\af0\dbch\af13\loch\f0 for(int i = 0 ; i <= 20000 ; i ++ )\{
\par \tab \tab 
\par \tab \tab \hich\af0\dbch\af13\loch\f0 rank[i] = 0;
\par \tab \tab \hich\af0\dbch\af13\loch\f0 vis[i] = i;\tab 
\par \tab \}
\par \tab \hich\af0\dbch\af13\loch\f0 return;
\par \}\tab 
\par 
\par \hich\af0\dbch\af13\loch\f0 int Find_set(const int &x)\{
\par \tab 
\par \tab \hich\af0\dbch\af13\loch\f0 if(x != vis[x])\{
\par \tab \tab 
\par \tab \tab \hich\af0\dbch\af13\loch\f0 vis[x] = Find_set(vis[x]);\tab 
\par \tab \}\tab 
\par \tab \hich\af0\dbch\af13\loch\f0 return vis[x];
\par \}
\par 
\par \hich\af0\dbch\af13\loch\f0 bool Union_set(int x,int y)\{
\par \tab 
\par \tab \hich\af0\dbch\af13\loch\f0 x = Find_set(x);
\par \tab \hich\af0\dbch\af13\loch\f0 y = Find_set(y);
\par \tab 
\par \tab \hich\af0\dbch\af13\loch\f0 if(x != y)\{
\par \tab \tab 
\par \tab \tab \hich\af0\dbch\af13\loch\f0 if(rank[x] > rank[y])\{
\par \tab \tab \tab 
\par \tab \tab \tab \hich\af0\dbch\af13\loch\f0 vis[y] = x;
\par \tab \tab \tab \hich\af0\dbch\af13\loch\f0 //rank[x] += rank[y];\tab 
\par \tab \tab \}
\par \tab \tab \hich\af0\dbch\af13\loch\f0 else\{
\par \tab \tab \tab 
\par \tab \tab \tab \hich\af0\dbch\af13\loch\f0 vis[x] = y;
\par \tab \tab \tab \hich\af0\dbch\af13\loch\f0 //rank[y] += r\hich\af0\dbch\af13\loch\f0 ank[x];\tab 
\par \tab \tab \}
\par \tab \tab \hich\af0\dbch\af13\loch\f0 if(rank[x]==rank[y])
\par \tab \tab \tab \hich\af0\dbch\af13\loch\f0 rank[x]++;
\par \tab \tab \hich\af0\dbch\af13\loch\f0 return true;
\par \tab \}
\par \tab \hich\af0\dbch\af13\loch\f0 return false;\tab 
\par \}\tab 
\par 
\par \hich\af0\dbch\af13\loch\f0 int kruskal(int n,int r)\{
\par \tab 
\par \tab \hich\af0\dbch\af13\loch\f0 qsort(v,r,sizeof(list),comp);
\par \tab 
\par \tab \hich\af0\dbch\af13\loch\f0 int result = 0 , count = 0;
\par \tab 
\par \tab \hich\af0\dbch\af13\loch\f0 for(int i = 0 ; i < r && count < n - 1 ; i ++ )\{
\par \tab \tab 
\par \tab \tab \hich\af0\dbch\af13\loch\f0 if(Union_set(v[i].v1,v[i].v2))\{
\par \tab \tab \tab 
\par \tab \tab \tab \hich\af0\dbch\af13\loch\f0 ++ count;
\par \tab \tab \tab \hich\af0\dbch\af13\loch\f0 result += v[i].w;
\par \tab \tab \}\tab \tab 
\par \tab \}
\par \tab \hich\af0\dbch\af13\loch\f0 return result;
\par \}\tab 
\par 
\par \hich\af0\dbch\af13\loch\f0 int main()\{
\par \tab 
\par \tab \hich\af0\dbch\af13\loch\f0 int t,n,m,r;
\par \tab \hich\af0\dbch\af13\loch\f0 scanf("%d",&t);
\par \tab 
\par \tab \hich\af0\dbch\af13\loch\f0 while(t -- )\{
\par \tab \tab 
\par \tab \tab \hich\af0\dbch\af13\loch\f0 scanf("%d%d%d",&n,&m,&r);
\par \tab \tab 
\par \tab \tab \hich\af0\dbch\af13\loch\f0 for(int i = 0 ; i < r ; i ++ )\{
\par \tab \tab \tab 
\par \tab \tab \tab \hich\af0\dbch\af13\loch\f0 scanf("%d%d%d",&v[i].v1,&v[i].v2,&v[i].w);\tab 
\par \tab \tab \tab \hich\af0\dbch\af13\loch\f0 v[i].v2 += d;
\par \tab \tab \}
\par \tab \tab \tab 
\par \tab \tab \hich\af0\dbch\af13\loch\f0 Init_set();
\par \tab \tab 
\par \tab \tab \hich\af0\dbch\af13\loch\f0 int result = kruskal(n + m,r);
\par \tab \tab \hich\af0\dbch\af13\loch\f0 for (i=0;i<n+m;i++)
\par \tab \tab \{
\par \tab \tab \tab \hich\af0\dbch\af13\loch\f0 cout<<rank[i]<<endl;
\par \tab \tab \}
\par \tab \tab 
\par \tab \tab \hich\af0\dbch\af13\loch\f0 result = 10000 * (n + m) - result;
\par \tab \tab 
\par \tab \tab \hich\af0\dbch\af13\loch\f0 printf("%d\\n",result);
\par \tab \tab 
\par \tab \}
\par \tab \hich\af0\dbch\af13\loch\f0 retur\hich\af0\dbch\af13\loch\f0 n 0;\tab 
\par \}
\par 
\par }{\insrsid3489225 
\par }}